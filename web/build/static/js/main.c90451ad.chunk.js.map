{"version":3,"sources":["utils/constants.ts","utils/searchGame.ts","utils/socket.ts","pages/Game/index.tsx","utils/errorToast.ts","pages/Home/index.tsx","pages/Join/index.tsx","index.tsx"],"names":["API_URL","searchGame","gameId","a","fetch","method","headers","body","JSON","stringify","game_id","res","json","data","result","gameExists","online","socket","io","withCredentials","Square","onClick","value","className","Board","mode","useState","squares","setSquares","xIsNext","setXIsNext","gameStatus","setGameStatus","enableRestart","setEnableRestart","playingAs","history","useHistory","squaresRef","useRef","useEffect","current","showToast","text","toast","position","hideProgressBar","draggable","autoClose","pauseOnHover","closeOnClick","transition","Slide","gameResult","calculateWinner","winner","gameTied","getBoard","on","updateBoard","off","updatedSquares","player","next","board","replace","pathname","renderSquare","i","tempSquares","slice","emit","handleClick","boardData","lines","length","b","c","includes","Game","setOnline","location","useLocation","connected","state","checkIfGameExists","toString","undefined","style","height","window","innerHeight","to","target","href","origin","rel","errorToast","type","Home","setGameId","setGameExists","gameIdToJoin","setGameIdToJoin","bothJoined","setBothJoined","joinGameInput","setJoinGameInput","creatingGame","setCreatingGame","joiningGame","setJoiningGame","createGame","console","error","joinGame","push","id","Fragment","link","navigator","clipboard","writeText","bodyClassName","copyLink","share","title","url","err","shareLink","name","placeholder","onChange","e","Date","getFullYear","Join","params","useParams","Main","exact","path","component","limit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c90451ad.chunk.js","sourcesContent":["export const API_URL =\r\n\tprocess.env.NODE_ENV === \"development\"\r\n\t\t? process.env.REACT_APP_API_URL\r\n\t\t: \"/\";\r\n","import { API_URL } from \"./constants\";\r\nimport { GameExistsResponse, SearchResponse } from \"./types\";\r\n\r\nexport const searchGame = async (\r\n\tgameId: string\r\n): Promise<GameExistsResponse> => {\r\n\tconst res = await fetch(`${API_URL}api/search/game`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\tbody: JSON.stringify({ game_id: gameId }),\r\n\t});\r\n\tconst data: SearchResponse = await res.json();\r\n\r\n\tif (data.result === \"fail\")\r\n\t\treturn {\r\n\t\t\tgameExists: false,\r\n\t\t\tonline: 0,\r\n\t\t};\r\n\tif (data.result === \"success\")\r\n\t\treturn {\r\n\t\t\tgameExists: true,\r\n\t\t\tonline: data.online,\r\n\t\t};\r\n\treturn {\r\n\t\tgameExists: false,\r\n\t\tonline: 0,\r\n\t};\r\n};\r\n","import { io } from \"socket.io-client\";\r\n\r\nconst socket_url =\r\n\tprocess.env.NODE_ENV === \"development\"\r\n\t\t? process.env.REACT_APP_API_URL || \"\"\r\n\t\t: \"/\";\r\n\r\nconst socket = io(`${socket_url}game`, {\r\n\twithCredentials: true,\r\n});\r\n\r\nexport default socket;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../../utils/constants\";\r\nimport { searchGame } from \"../../utils/searchGame\";\r\nimport socket from \"../../utils/socket\";\r\nimport \"./game.css\";\r\nimport { toast, Slide } from \"react-toastify\";\r\n\r\ntype SquareProps = {\r\n\tonClick: React.MouseEventHandler<HTMLButtonElement> | undefined;\r\n\tvalue: string | null;\r\n};\r\n\r\nconst Square: React.FC<SquareProps> = ({ onClick, value }) => (\r\n\t<button className=\"square\" onClick={onClick}>\r\n\t\t{value}\r\n\t</button>\r\n);\r\n\r\ntype BoardProps = {\r\n\tmode: \"CREATE\" | \"JOIN\";\r\n\tgameId: number;\r\n};\r\n\r\ntype FetchGameResponse = {\r\n\tresult: \"fail\" | \"success\";\r\n\tboard: Array<string | null>;\r\n\tnext: \"X\" | \"O\";\r\n};\r\n\r\ntype UpdateBoardResponse = {\r\n\tposition: number;\r\n\tnext: \"X\" | \"O\";\r\n\tplayer: any;\r\n};\r\nconst Board: React.FC<BoardProps> = ({ mode, gameId }) => {\r\n\tconst [squares, setSquares] = useState<Array<string | null>>([]);\r\n\tconst [xIsNext, setXIsNext] = useState(true);\r\n\tconst [gameStatus, setGameStatus] = useState<string | null>(null);\r\n\tconst [enableRestart, setEnableRestart] = useState(false);\r\n\r\n\tconst playingAs = mode === \"CREATE\" ? \"X\" : \"O\";\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst squaresRef = useRef(squares);\r\n\r\n\tuseEffect(() => {\r\n\t\tsquaresRef.current = squares;\r\n\t});\r\n\r\n\tconst showToast = (text: string) =>\r\n\t\ttoast(text, {\r\n\t\t\tposition: \"bottom-center\",\r\n\t\t\thideProgressBar: true,\r\n\t\t\tdraggable: false,\r\n\t\t\tautoClose: 5000,\r\n\t\t\tpauseOnHover: false,\r\n\t\t\tcloseOnClick: true,\r\n\t\t\ttransition: Slide,\r\n\t\t});\r\n\tuseEffect(() => {\r\n\t\tconst gameResult = calculateWinner(squares);\r\n\t\tif (gameResult) {\r\n\t\t\tif (gameResult.winner && !gameResult.gameTied) {\r\n\t\t\t\tsetGameStatus(`Winner : ${gameResult.winner}`);\r\n\t\t\t}\r\n\t\t\tif (gameResult.gameTied && !gameResult.winner) {\r\n\t\t\t\tsetGameStatus(\"Game Tied\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetGameStatus(\r\n\t\t\t\t`Next Player : ${\r\n\t\t\t\t\txIsNext\r\n\t\t\t\t\t\t? mode === \"CREATE\"\r\n\t\t\t\t\t\t\t? \"You\"\r\n\t\t\t\t\t\t\t: \"X\"\r\n\t\t\t\t\t\t: mode === \"JOIN\"\r\n\t\t\t\t\t\t? \"You\"\r\n\t\t\t\t\t\t: \"O\"\r\n\t\t\t\t}`\r\n\t\t\t);\r\n\t\t}\r\n\t}, [squares]);\r\n\r\n\tuseEffect(() => {\r\n\t\tgetBoard();\r\n\t\tsocket.on(\"moved\", updateBoard);\r\n\t\tsocket.on(\"restarted\", () => {\r\n\t\t\tgetBoard();\r\n\t\t\tshowToast(\"Game Restarted !\");\r\n\t\t});\r\n\t\treturn () => {\r\n\t\t\tsocket.off(\"moved\", updateBoard);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tconst updateBoard = (data: UpdateBoardResponse) => {\r\n\t\tconst updatedSquares = [...squaresRef.current];\r\n\t\tupdatedSquares[data.position] = data.player;\r\n\t\tsetSquares(updatedSquares);\r\n\t\tsetXIsNext(data.next === \"X\");\r\n\t\tconst gameResult = calculateWinner(updatedSquares);\r\n\t\tif (gameResult) setEnableRestart(true);\r\n\t\tif (gameResult?.gameTied) {\r\n\t\t\tshowToast(\"Game Tied\");\r\n\t\t}\r\n\r\n\t\tif (gameResult?.winner) {\r\n\t\t\tif (gameResult.winner === playingAs) {\r\n\t\t\t\tshowToast(\"You won 🎉️\");\r\n\t\t\t} else {\r\n\t\t\t\tshowToast(\"You lost\");\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tconst getBoard = async () => {\r\n\t\tsetEnableRestart(false);\r\n\t\tconst res = await fetch(`${API_URL}api/fetch/game/${gameId}`);\r\n\t\tconst data: FetchGameResponse = await res.json();\r\n\t\tif (data.result === \"success\") {\r\n\t\t\tsetSquares(data.board);\r\n\t\t\tsetXIsNext(data.next === \"X\");\r\n\t\t\tconst status = calculateWinner(data.board);\r\n\t\t\tif (status) setEnableRestart(true);\r\n\t\t} else if (data.result === \"fail\") {\r\n\t\t\thistory.replace({ pathname: \"/\" });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClick = (i: number) => {\r\n\t\tconst tempSquares = squares.slice();\r\n\t\tconst gameResult = calculateWinner(squares);\r\n\r\n\t\tif (gameResult || squares[i]) {\r\n\t\t\tif (gameResult?.gameTied) {\r\n\t\t\t\tshowToast(\"Game Tied\");\r\n\t\t\t} else if (gameResult?.winner) {\r\n\t\t\t\tif (gameResult.winner === playingAs) {\r\n\t\t\t\t\tshowToast(\"You won 🎉️\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tshowToast(\"You lost\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (mode === \"CREATE\" && xIsNext) {\r\n\t\t\ttempSquares[i] = \"X\";\r\n\t\t\tsetSquares(tempSquares);\r\n\t\t\tsetXIsNext(false);\r\n\t\t\tsocket.emit(\"move\", {\r\n\t\t\t\tplayer: tempSquares[i],\r\n\t\t\t\tposition: i,\r\n\t\t\t\tgame_id: gameId,\r\n\t\t\t});\r\n\t\t} else if (mode === \"JOIN\" && !xIsNext) {\r\n\t\t\ttempSquares[i] = \"O\";\r\n\t\t\tsetSquares(tempSquares);\r\n\t\t\tsetXIsNext(true);\r\n\t\t\tsocket.emit(\"move\", {\r\n\t\t\t\tplayer: tempSquares[i],\r\n\t\t\t\tposition: i,\r\n\t\t\t\tgame_id: gameId,\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tconst renderSquare = (i: number) => (\r\n\t\t<Square value={squares[i]} onClick={() => handleClick(i)} />\r\n\t);\r\n\r\n\tconst restartGame = () => socket.emit(\"restartGame\", { game_id: gameId });\r\n\r\n\treturn (\r\n\t\t<div className=\"flex flex-col space-y-4 items-center\">\r\n\t\t\t<p className=\"text-gray-500 text-sm md:text-base\">{gameStatus}</p>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{renderSquare(0)}\r\n\t\t\t\t\t{renderSquare(1)}\r\n\t\t\t\t\t{renderSquare(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{renderSquare(3)}\r\n\t\t\t\t\t{renderSquare(4)}\r\n\t\t\t\t\t{renderSquare(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"board-row\">\r\n\t\t\t\t\t{renderSquare(6)}\r\n\t\t\t\t\t{renderSquare(7)}\r\n\t\t\t\t\t{renderSquare(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<p>\r\n\t\t\t\tPlaying as : <b>{playingAs}</b>\r\n\t\t\t</p>\r\n\t\t\t{enableRestart && <button onClick={restartGame}>Restart</button>}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nfunction calculateWinner(boardData: Array<string | null>) {\r\n\tconst lines = [\r\n\t\t[0, 1, 2],\r\n\t\t[3, 4, 5],\r\n\t\t[6, 7, 8],\r\n\t\t[0, 3, 6],\r\n\t\t[1, 4, 7],\r\n\t\t[2, 5, 8],\r\n\t\t[0, 4, 8],\r\n\t\t[2, 4, 6],\r\n\t];\r\n\tfor (let i = 0; i < lines.length; i++) {\r\n\t\tconst [a, b, c] = lines[i];\r\n\t\tif (\r\n\t\t\tboardData[a] &&\r\n\t\t\tboardData[a] === boardData[b] &&\r\n\t\t\tboardData[a] === boardData[c]\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\twinner: boardData[a],\r\n\t\t\t\tgameTied: false,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\tif (boardData.includes(null) === false) {\r\n\t\treturn {\r\n\t\t\twinner: null,\r\n\t\t\tgameTied: true,\r\n\t\t};\r\n\t}\r\n\treturn null;\r\n}\r\n\r\ntype LocationStateType = {\r\n\tgameId: number;\r\n\tmode: \"CREATE\" | \"JOIN\";\r\n};\r\n\r\ntype SocketConnectedData = {\r\n\tgame_id: string;\r\n\tonline: string[];\r\n};\r\n\r\nconst Game: React.FC<any> = () => {\r\n\tconst [online, setOnline] = useState(0);\r\n\r\n\tconst location = useLocation();\r\n\tconst history = useHistory();\r\n\r\n\tconst connected = (data: SocketConnectedData) =>\r\n\t\tsetOnline(data.online.length);\r\n\r\n\tconst gameId = (location.state as LocationStateType)?.gameId;\r\n\tconst mode = (location.state as LocationStateType)?.mode || \"JOIN\";\r\n\r\n\tconst checkIfGameExists = async () => {\r\n\t\tconst gameExists = await searchGame(gameId.toString());\r\n\t\tif (!gameExists) {\r\n\t\t\thistory.replace({\r\n\t\t\t\tpathname: \"/\",\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tif (location.state !== undefined && gameId) checkIfGameExists();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (location.state !== undefined && gameId)\r\n\t\t\tsocket.emit(\"join\", {\r\n\t\t\t\tgame_id: gameId,\r\n\t\t\t\tplayer: mode === \"CREATE\" ? \"X\" : \"O\",\r\n\t\t\t});\r\n\r\n\t\tsocket.on(\"connected\", connected);\r\n\t\tsocket.on(\"disconnected\", connected);\r\n\t\treturn () => {\r\n\t\t\tsocket.emit(\"leave\", {\r\n\t\t\t\tgame_id: gameId,\r\n\t\t\t\tplayer: mode === \"CREATE\" ? \"X\" : \"O\",\r\n\t\t\t});\r\n\t\t\tsocket.off(\"connected\");\r\n\t\t};\r\n\t}, []);\r\n\r\n\tif (!location.state || !gameId)\r\n\t\thistory.replace({\r\n\t\t\tpathname: \"/\",\r\n\t\t});\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"flex flex-col items-center px-4\"\r\n\t\t\tstyle={{\r\n\t\t\t\theight: window.innerHeight,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Link to=\"/\" className=\"underline text-gray-500\">\r\n\t\t\t\tGo Home\r\n\t\t\t</Link>\r\n\r\n\t\t\t<p className=\"self-end md:text-lg\">Joined: {online}</p>\r\n\r\n\t\t\t<div className=\"flex-grow-1 h-full justify-center flex flex-col\">\r\n\t\t\t\t<Board gameId={gameId} mode={mode} />\r\n\t\t\t</div>\r\n\r\n\t\t\t<a\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\thref={window.location.origin + \"/join/\" + gameId}\r\n\t\t\t\tclassName=\"my-4 text-gray-500 text-sm md:text-base\"\r\n\t\t\t\trel=\"noreferrer\"\r\n\t\t\t>\r\n\t\t\t\tGame: {gameId}\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Game;\r\n","import { toast, Slide } from \"react-toastify\";\r\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\r\nexport const errorToast = (text = \"An error occured\") =>\r\n\ttoast(text, {\r\n\t\tposition: \"bottom-center\",\r\n\t\thideProgressBar: true,\r\n\t\tdraggable: false,\r\n\t\tautoClose: 5000,\r\n\t\tpauseOnHover: false,\r\n\t\tcloseOnClick: true,\r\n\t\ttransition: Slide,\r\n\t\ttype: \"error\",\r\n\t});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory, NavLink } from \"react-router-dom\";\r\nimport { toast, Slide } from \"react-toastify\";\r\nimport { API_URL } from \"../../utils/constants\";\r\nimport { errorToast } from \"../../utils/errorToast\";\r\nimport { searchGame } from \"../../utils/searchGame\";\r\n\r\nconst Home: React.FC<any> = () => {\r\n\tconst [gameId, setGameId] = useState(null);\r\n\tconst [gameExists, setGameExists] = useState(true);\r\n\tconst [gameIdToJoin, setGameIdToJoin] = useState<string | null>(null);\r\n\tconst [bothJoined, setBothJoined] = useState(false);\r\n\tconst [joinGameInput, setJoinGameInput] = useState(false);\r\n\tconst [creatingGame, setCreatingGame] = useState(false);\r\n\r\n\tconst [joiningGame, setJoiningGame] = useState(false);\r\n\r\n\tconst history = useHistory();\r\n\r\n\tconst createGame = async () => {\r\n\t\tsetJoinGameInput(false);\r\n\t\tsetCreatingGame(true);\r\n\t\ttry {\r\n\t\t\tconst res = await fetch(`${API_URL}api/create/game`);\r\n\t\t\tconst data = await res.json();\r\n\t\t\tif (data.result === \"success\") {\r\n\t\t\t\tsetGameId(data.game_id);\r\n\t\t\t\tsetCreatingGame(false);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\tsetCreatingGame(false);\r\n\t\t\terrorToast();\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t//vs Computer [1]\r\n\tconst vsComputer = () =>\r\n\t\thistory.push({\r\n\t\t\tpathname: \"/computer\"\r\n\t\t});\r\n\r\n\r\n\tconst toggleJoinGameInput = () => setJoinGameInput(!joinGameInput);\r\n\r\n\tconst startGame = () =>\r\n\t\thistory.push({\r\n\t\t\tpathname: \"/game\",\r\n\t\t\tstate: {\r\n\t\t\t\tgameId,\r\n\t\t\t\tmode: \"CREATE\",\r\n\t\t\t},\r\n\t\t});\r\n\r\n\tconst joinGame = async () => {\r\n\t\tif (!gameIdToJoin) return null;\r\n\t\ttry {\r\n\t\t\tsetJoiningGame(true);\r\n\r\n\t\t\tconst gameExists = await searchGame(gameIdToJoin);\r\n\r\n\t\t\tif (gameExists) {\r\n\t\t\t\tsetGameExists(true);\r\n\t\t\t\tsetJoiningGame(false);\r\n\t\t\t\tif (gameExists.online !== 2) {\r\n\t\t\t\t\thistory.push({\r\n\t\t\t\t\t\tpathname: \"/game\",\r\n\t\t\t\t\t\tstate: {\r\n\t\t\t\t\t\t\tgameId: gameIdToJoin,\r\n\t\t\t\t\t\t\tmode: \"JOIN\",\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetBothJoined(true);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tsetBothJoined(false);\r\n\t\t\t\tsetGameExists(false);\r\n\t\t\t\tsetJoiningGame(false);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(err);\r\n\t\t\terrorToast();\r\n\t\t\tsetJoiningGame(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst copyLink = (link: string) => {\r\n\t\tnavigator.clipboard?.writeText(link);\r\n\t\ttoast(\"Copied\", {\r\n\t\t\tposition: \"bottom-center\",\r\n\t\t\thideProgressBar: true,\r\n\t\t\tdraggable: false,\r\n\t\t\tautoClose: 5000,\r\n\t\t\tpauseOnHover: false,\r\n\t\t\tcloseOnClick: true,\r\n\t\t\ttransition: Slide,\r\n\t\t\tbodyClassName: \"flex items-center flex-row  text-black rounded-lg\",\r\n\t\t});\r\n\t};\r\n\r\n\r\n\r\n\tconst shareLink = (link:string) => {\r\n\t\tif (navigator.share) {\r\n\t\t\ttry {\r\n\t\t\t\tnavigator.share({\r\n\t\t\t\t\ttitle:\"Tic Tac Toe Online\",\r\n\t\t\t\t\ttext: \"You're invited to play Tic Tac Toe Online\",\r\n\t\t\t\t\turl: link\r\n\t\t\t\t})\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error(err)\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tconsole.error(\"Sharing not supported\")\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"flex flex-col w-screen  items-center justify-center px-4\"\r\n\t\t\tstyle={{\r\n\t\t\t\theight: window.innerHeight,\r\n\t\t\t}}\r\n\t\t>\r\n\r\n\t\t<nav className=\"stroke navbar navbar-expand-lg navbar-light fixed-top\">\r\n\t\t\t<div className=\"container\">\r\n\t\t\t<Link className=\"navbar-brand\" to={\"/login\"}>Jogo do Galo</Link>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n\t\t\t\t<ul className=\"navbar-nav ml-auto\">\r\n\t\t\t\t</ul>\r\n\t\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<NavLink className=\"nav-link\" to={\"/login\"}>Login</NavLink>\r\n\t\t\t\t\t<NavLink  className=\"nav-link\" to={\"/register\"}>Sign up</NavLink>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\r\n\t\t\t<div className=\"flex flex-col space-y-4 h-full items-center justify-center\">\r\n\t\t\t\t<span className=\"flex\">\r\n\t\t\t\t\t<p className=\"text-4xl font-bold mt-2\">Tic-Tac-Toe</p>\r\n\t\t\t\t\t<p className=\"font-light text-xl \">Online</p>\r\n\t\t\t\t</span>\r\n\t\t\t\t<h3 className=\"text-xl text-center pt-4\">Get Started</h3>\r\n\t\t\t\t<div className=\"flex space-x-4 flex-wrap\">\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button className=\"border border-black bg-transparent text-black hover:bg-black hover:text-white px-4 py-3 transition\" type=\"submit\" onClick={vsComputer}\r\n>vs. Computer</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"bg-black text-white px-4 py-3 hover:bg-white hover:text-black border border-black transition\"\r\n\t\t\t\t\t\tonClick={createGame}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{creatingGame ? \"Creating...\" : \"Create a new game\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={toggleJoinGameInput}\r\n\t\t\t\t\t\tclassName=\"border border-black bg-transparent text-black hover:bg-black hover:text-white px-4 py-3 transition\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{joiningGame ? \"Joining...\" : \"Join a game\"}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t{gameId && (\r\n\t\t\t\t\t<div className=\"flex items-center flex-col text-center py-4 px-4\">\r\n\t\t\t\t\t\t<h4 className=\"text-lg font-semibold\">\r\n\t\t\t\t\t\t\tGame Created.\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\tGame ID : {gameId}\r\n\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t<p className=\"text-sm md:text-base\">\r\n\t\t\t\t\t\t\tAsk the other player to enter this ID while Joining\r\n\t\t\t\t\t\t\tthe game. Or use the link below (Tap to copy) :\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\tcopyLink(window.location + \"join/\" + gameId)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName=\"my-4 text-gray-700\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{window.location + \"join/\" + gameId}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t{navigator.share !== undefined && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"text-lg font-medium \"\r\n\t\t\t\t\t\tonClick={() => shareLink(window.location + \"join/\" + gameId)}>Share</button>)}\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"bg-black text-white transition hover:bg-white hover:text-black  w-full md:w-64 py-3 my-4 border border-black\"\r\n\t\t\t\t\t\t\tonClick={startGame}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tStart Game\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{joinGameInput && (\r\n\t\t\t\t\t<div className=\"\">\r\n\t\t\t\t\t\t<div className=\"flex flex-row space-x-4 justify-center\">\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"gameID\"\r\n\t\t\t\t\t\t\t\tid=\"gameID\"\r\n\t\t\t\t\t\t\t\tclassName=\"bg-gray-100 px-4 py-3 rounded-md w-48\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Game ID\"\r\n\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\tsetGameIdToJoin(e.target.value);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"text-white bg-black py-3 px-6\"\r\n\t\t\t\t\t\t\t\tonClick={joinGame}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tJoin\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{bothJoined && (\r\n\t\t\t\t\t\t\t\t<h3 className=\"my-4 text-red-700\">\r\n\t\t\t\t\t\t\t\t\tBoth players have already joined.\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t{!gameExists && (\r\n\t\t\t\t\t\t\t\t<h3 className=\"my-4 text-red-700\">\r\n\t\t\t\t\t\t\t\t\tGame doesn&apos;t exist. Create one to start\r\n\t\t\t\t\t\t\t\t\tplaying.\r\n\t\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\" mb-4 text-center flex flex-col text-sm md:text-base\">\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://github.com/NiketanG/tic-tac-toe-online\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noreferrer\"\r\n\t\t\t\t\tclassName=\"underline text-gray-600\"\r\n\t\t\t\t>\r\n\t\t\t\t\tLearn More\r\n\t\t\t\t</a>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tDesigned and Developed by{\" \"}\r\n\t\t\t\t\t<a href=\"http://bit.ly/nikketan\">Niketan Gulekar</a> &copy;\r\n\t\t\t\t\t{new Date().getFullYear()}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { API_URL } from \"../../utils/constants\";\r\n\r\nimport { errorToast } from \"../../utils/errorToast\";\r\ntype Params = {\r\n\tgameId: string;\r\n};\r\n\r\nconst Join: React.FC<any> = () => {\r\n\tconst params = useParams<Params>();\r\n\tconst history = useHistory();\r\n\r\n\tconst searchGame = async () => {\r\n\t\tconst res = await fetch(`${API_URL}api/search/game`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify({ game_id: params.gameId }),\r\n\t\t});\r\n\r\n\t\tconst data = await res.json();\r\n\t\tif (data.result === \"fail\") {\r\n\t\t\terrorToast(\"Game does'nt exist\");\r\n\t\t\thistory.replace({\r\n\t\t\t\tpathname: \"/\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (data.result === \"success\") \r\n\t\t\thistory.replace({\r\n\t\t\t\tpathname: \"/game\",\r\n\t\t\t\tstate: {\r\n\t\t\t\t\tgameId: params.gameId,\r\n\t\t\t\t\tmode: \"JOIN\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tsearchGame();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"flex flex-col items-center justify-center h-screen \">\r\n\t\t\t<p className=\"text-2xl md:text-4xl my-2\">Joining Game</p>\r\n\t\t\t<p className=\"my-8\">Game ID: {params.gameId}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Join;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Game from \"./pages/Game\";\r\nimport Home from \"./pages/Home\";\r\nimport Join from \"./pages/Join\";\r\nimport \"./styles/index.css\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst Main = () => (\r\n\t<Router>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path=\"/\" component={Home} />\r\n\t\t\t<Route path=\"/game\" component={Game} />\r\n\t\t\t<Route path=\"/join/:gameId\" component={Join} />\r\n\t\t</Switch>\r\n\t\t<ToastContainer limit={3} />\r\n\t</Router>\r\n);\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Main />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}