{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Irene Canelas/Documents/GitHub/tictactoe/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Irene Canelas/Documents/GitHub/tictactoe/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useEffect}from\"react\";import{useHistory,useParams}from\"react-router\";import{API_URL}from\"../../utils/constants\";import{errorToast}from\"../../utils/errorToast\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Join=function Join(){var params=useParams();var history=useHistory();var searchGame=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"api/search/game\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:params.gameId})});case 2:res=_context.sent;_context.next=5;return res.json();case 5:data=_context.sent;if(data.result===\"fail\"){errorToast(\"Game does'nt exist\");history.replace({pathname:\"/\"});}if(data.result===\"success\")history.replace({pathname:\"/game\",state:{gameId:params.gameId,mode:\"JOIN\"}});case 8:case\"end\":return _context.stop();}}},_callee);}));return function searchGame(){return _ref.apply(this,arguments);};}();useEffect(function(){searchGame();},[]);return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col items-center justify-center h-screen \",children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-2xl md:text-4xl my-2\",children:\"Joining Game\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"my-8\",children:[\"Game ID: \",params.gameId]})]});};export default Join;","map":{"version":3,"sources":["C:/Users/Irene Canelas/Documents/GitHub/tictactoe/web/src/pages/Join/index.tsx"],"names":["React","useEffect","useHistory","useParams","API_URL","errorToast","Join","params","history","searchGame","fetch","method","headers","body","JSON","stringify","game_id","gameId","res","json","data","result","replace","pathname","state","mode"],"mappings":"qVAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,cAAtC,CACA,OAASC,OAAT,KAAwB,uBAAxB,CAEA,OAASC,UAAT,KAA2B,wBAA3B,C,wFAKA,GAAMC,CAAAA,IAAmB,CAAG,QAAtBA,CAAAA,IAAsB,EAAM,CACjC,GAAMC,CAAAA,MAAM,CAAGJ,SAAS,EAAxB,CACA,GAAMK,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CAEA,GAAMO,CAAAA,UAAU,0FAAG,sKACAC,CAAAA,KAAK,WAAIN,OAAJ,oBAA8B,CACpDO,MAAM,CAAE,MAD4C,CAEpDC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF2C,CAGpDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,OAAO,CAAET,MAAM,CAACU,MAAlB,CAAf,CAH8C,CAA9B,CADL,QACZC,GADY,qCAOCA,CAAAA,GAAG,CAACC,IAAJ,EAPD,QAOZC,IAPY,eAQlB,GAAIA,IAAI,CAACC,MAAL,GAAgB,MAApB,CAA4B,CAC3BhB,UAAU,CAAC,oBAAD,CAAV,CACAG,OAAO,CAACc,OAAR,CAAgB,CACfC,QAAQ,CAAE,GADK,CAAhB,EAGA,CAED,GAAIH,IAAI,CAACC,MAAL,GAAgB,SAApB,CACCb,OAAO,CAACc,OAAR,CAAgB,CACfC,QAAQ,CAAE,OADK,CAEfC,KAAK,CAAE,CACNP,MAAM,CAAEV,MAAM,CAACU,MADT,CAENQ,IAAI,CAAE,MAFA,CAFQ,CAAhB,EAhBiB,sDAAH,kBAAVhB,CAAAA,UAAU,0CAAhB,CAyBAR,SAAS,CAAC,UAAM,CACfQ,UAAU,GACV,CAFQ,CAEN,EAFM,CAAT,CAIA,mBACC,aAAK,SAAS,CAAC,qDAAf,wBACC,UAAG,SAAS,CAAC,2BAAb,0BADD,cAEC,WAAG,SAAS,CAAC,MAAb,uBAA8BF,MAAM,CAACU,MAArC,GAFD,GADD,CAMA,CAvCD,CAyCA,cAAeX,CAAAA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport { API_URL } from \"../../utils/constants\";\r\n\r\nimport { errorToast } from \"../../utils/errorToast\";\r\ntype Params = {\r\n\tgameId: string;\r\n};\r\n\r\nconst Join: React.FC<any> = () => {\r\n\tconst params = useParams<Params>();\r\n\tconst history = useHistory();\r\n\r\n\tconst searchGame = async () => {\r\n\t\tconst res = await fetch(`${API_URL}api/search/game`, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\t\tbody: JSON.stringify({ game_id: params.gameId }),\r\n\t\t});\r\n\r\n\t\tconst data = await res.json();\r\n\t\tif (data.result === \"fail\") {\r\n\t\t\terrorToast(\"Game does'nt exist\");\r\n\t\t\thistory.replace({\r\n\t\t\t\tpathname: \"/\",\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (data.result === \"success\") \r\n\t\t\thistory.replace({\r\n\t\t\t\tpathname: \"/game\",\r\n\t\t\t\tstate: {\r\n\t\t\t\t\tgameId: params.gameId,\r\n\t\t\t\t\tmode: \"JOIN\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tsearchGame();\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"flex flex-col items-center justify-center h-screen \">\r\n\t\t\t<p className=\"text-2xl md:text-4xl my-2\">Joining Game</p>\r\n\t\t\t<p className=\"my-8\">Game ID: {params.gameId}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Join;\r\n"]},"metadata":{},"sourceType":"module"}