{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Irene Canelas/Documents/GitHub/tictactoe/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Irene Canelas/Documents/GitHub/tictactoe/web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{API_URL}from\"./constants\";export var searchGame=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(gameId){var res,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"api/search/game\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({game_id:gameId})});case 2:res=_context.sent;_context.next=5;return res.json();case 5:data=_context.sent;if(!(data.result===\"fail\")){_context.next=8;break;}return _context.abrupt(\"return\",{gameExists:false,online:0});case 8:if(!(data.result===\"success\")){_context.next=10;break;}return _context.abrupt(\"return\",{gameExists:true,online:data.online});case 10:return _context.abrupt(\"return\",{gameExists:false,online:0});case 11:case\"end\":return _context.stop();}}},_callee);}));return function searchGame(_x){return _ref.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/Irene Canelas/Documents/GitHub/tictactoe/web/src/utils/searchGame.ts"],"names":["API_URL","searchGame","gameId","fetch","method","headers","body","JSON","stringify","game_id","res","json","data","result","gameExists","online"],"mappings":"qVAAA,OAASA,OAAT,KAAwB,aAAxB,CAGA,MAAO,IAAMC,CAAAA,UAAU,0FAAG,iBACzBC,MADyB,qJAGPC,CAAAA,KAAK,WAAIH,OAAJ,oBAA8B,CACpDI,MAAM,CAAE,MAD4C,CAEpDC,OAAO,CAAE,CAAE,eAAgB,kBAAlB,CAF2C,CAGpDC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAe,CAAEC,OAAO,CAAEP,MAAX,CAAf,CAH8C,CAA9B,CAHE,QAGnBQ,GAHmB,qCAQUA,CAAAA,GAAG,CAACC,IAAJ,EARV,QAQnBC,IARmB,oBAUrBA,IAAI,CAACC,MAAL,GAAgB,MAVK,0DAWjB,CACNC,UAAU,CAAE,KADN,CAENC,MAAM,CAAE,CAFF,CAXiB,cAerBH,IAAI,CAACC,MAAL,GAAgB,SAfK,2DAgBjB,CACNC,UAAU,CAAE,IADN,CAENC,MAAM,CAAEH,IAAI,CAACG,MAFP,CAhBiB,0CAoBlB,CACND,UAAU,CAAE,KADN,CAENC,MAAM,CAAE,CAFF,CApBkB,yDAAH,kBAAVd,CAAAA,UAAU,4CAAhB","sourcesContent":["import { API_URL } from \"./constants\";\r\nimport { GameExistsResponse, SearchResponse } from \"./types\";\r\n\r\nexport const searchGame = async (\r\n\tgameId: string\r\n): Promise<GameExistsResponse> => {\r\n\tconst res = await fetch(`${API_URL}api/search/game`, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: { \"Content-Type\": \"application/json\" },\r\n\t\tbody: JSON.stringify({ game_id: gameId }),\r\n\t});\r\n\tconst data: SearchResponse = await res.json();\r\n\r\n\tif (data.result === \"fail\")\r\n\t\treturn {\r\n\t\t\tgameExists: false,\r\n\t\t\tonline: 0,\r\n\t\t};\r\n\tif (data.result === \"success\")\r\n\t\treturn {\r\n\t\t\tgameExists: true,\r\n\t\t\tonline: data.online,\r\n\t\t};\r\n\treturn {\r\n\t\tgameExists: false,\r\n\t\tonline: 0,\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}