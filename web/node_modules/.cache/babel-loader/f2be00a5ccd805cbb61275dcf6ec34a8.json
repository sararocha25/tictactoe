{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\tictactoe\\\\web\\\\src\\\\pages\\\\Game\\\\index.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { API_URL } from \"../../utils/constants\";\nimport { searchGame } from \"../../utils/searchGame\";\nimport socket from \"../../utils/socket\";\nimport \"./game.css\";\nimport { toast, Slide } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Square = ({\n  onClick,\n  value\n}) => /*#__PURE__*/_jsxDEV(\"button\", {\n  className: \"square\",\n  onClick: onClick,\n  children: value\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 2\n}, this);\n\n_c = Square;\n\nconst Board = ({\n  mode,\n  gameId\n}) => {\n  _s();\n\n  const [squares, setSquares] = useState([]);\n  const [xIsNext, setXIsNext] = useState(true);\n  const [gameStatus, setGameStatus] = useState(null);\n  const [enableRestart, setEnableRestart] = useState(false);\n  const playingAs = mode === \"CREATE\" ? \"X\" : \"O\";\n  const history = useHistory();\n  const squaresRef = useRef(squares);\n  useEffect(() => {\n    squaresRef.current = squares;\n  });\n\n  const showToast = text => toast(text, {\n    position: \"bottom-center\",\n    hideProgressBar: true,\n    draggable: false,\n    autoClose: 5000,\n    pauseOnHover: false,\n    closeOnClick: true,\n    transition: Slide\n  });\n\n  useEffect(() => {\n    const gameResult = calculateWinner(squares);\n\n    if (gameResult) {\n      if (gameResult.winner && !gameResult.gameTied) {\n        setGameStatus(`Winner : ${gameResult.winner}`);\n      }\n\n      if (gameResult.gameTied && !gameResult.winner) {\n        setGameStatus(\"Game Tied\");\n      }\n    } else {\n      setGameStatus(`Next Player : ${xIsNext ? mode === \"CREATE\" ? \"You\" : \"X\" : mode === \"JOIN\" ? \"You\" : \"O\"}`);\n    }\n  }, [squares]);\n  useEffect(() => {\n    getBoard();\n    socket.on(\"moved\", updateBoard);\n    socket.on(\"restarted\", () => {\n      getBoard();\n      showToast(\"Game Restarted !\");\n    });\n    return () => {\n      socket.off(\"moved\", updateBoard);\n    };\n  }, []);\n\n  const updateBoard = data => {\n    const updatedSquares = [...squaresRef.current];\n    updatedSquares[data.position] = data.player;\n    setSquares(updatedSquares);\n    setXIsNext(data.next === \"X\");\n    const gameResult = calculateWinner(updatedSquares);\n    if (gameResult) setEnableRestart(true);\n\n    if (gameResult === null || gameResult === void 0 ? void 0 : gameResult.gameTied) {\n      showToast(\"Game Tied\");\n    }\n\n    if (gameResult === null || gameResult === void 0 ? void 0 : gameResult.winner) {\n      if (gameResult.winner === playingAs) {\n        showToast(\"You won 🎉️\");\n      } else {\n        showToast(\"You lost\");\n      }\n    }\n  };\n\n  const getBoard = async () => {\n    setEnableRestart(false);\n    const res = await fetch(`${API_URL}api/fetch/game/${gameId}`);\n    const data = await res.json();\n\n    if (data.result === \"success\") {\n      setSquares(data.board);\n      setXIsNext(data.next === \"X\");\n      const status = calculateWinner(data.board);\n      if (status) setEnableRestart(true);\n    } else if (data.result === \"fail\") {\n      history.replace({\n        pathname: \"/\"\n      });\n    }\n  };\n\n  const handleClick = i => {\n    const tempSquares = squares.slice();\n    const gameResult = calculateWinner(squares);\n\n    if (gameResult || squares[i]) {\n      if (gameResult === null || gameResult === void 0 ? void 0 : gameResult.gameTied) {\n        showToast(\"Game Tied\");\n      } else if (gameResult === null || gameResult === void 0 ? void 0 : gameResult.winner) {\n        if (gameResult.winner === playingAs) {\n          showToast(\"You won 🎉️\");\n        } else {\n          showToast(\"You lost\");\n        }\n      }\n\n      return;\n    }\n\n    if (mode === \"CREATE\" && xIsNext) {\n      tempSquares[i] = \"X\";\n      setSquares(tempSquares);\n      setXIsNext(false);\n      socket.emit(\"move\", {\n        player: tempSquares[i],\n        position: i,\n        game_id: gameId\n      });\n    } else if (mode === \"JOIN\" && !xIsNext) {\n      tempSquares[i] = \"O\";\n      setSquares(tempSquares);\n      setXIsNext(true);\n      socket.emit(\"move\", {\n        player: tempSquares[i],\n        position: i,\n        game_id: gameId\n      });\n    }\n  };\n\n  const renderSquare = i => /*#__PURE__*/_jsxDEV(Square, {\n    value: squares[i],\n    onClick: () => handleClick(i)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 3\n  }, this);\n\n  const restartGame = () => socket.emit(\"restartGame\", {\n    game_id: gameId\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col space-y-4 items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 text-sm md:text-base\",\n      children: gameStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Playing as : \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: playingAs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 4\n    }, this), enableRestart && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: restartGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Board, \"8ImvmV+h0QpiRy/R413aALejjhI=\", false, function () {\n  return [useHistory];\n});\n\n_c2 = Board;\n\nfunction calculateWinner(boardData) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (boardData[a] && boardData[a] === boardData[b] && boardData[a] === boardData[c]) {\n      return {\n        winner: boardData[a],\n        gameTied: false\n      };\n    }\n  }\n\n  if (boardData.includes(null) === false) {\n    return {\n      winner: null,\n      gameTied: true\n    };\n  }\n\n  return null;\n}\n\nconst Game = () => {\n  _s2();\n\n  var _location$state, _location$state2;\n\n  const [online, setOnline] = useState(0);\n  const location = useLocation();\n  const history = useHistory();\n\n  const connected = data => setOnline(data.online.length);\n\n  const gameId = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.gameId;\n  const mode = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.mode) || \"JOIN\";\n\n  const checkIfGameExists = async () => {\n    const gameExists = await searchGame(gameId.toString());\n\n    if (!gameExists) {\n      history.replace({\n        pathname: \"/\"\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (location.state !== undefined && gameId) checkIfGameExists();\n  }, []);\n  useEffect(() => {\n    if (location.state !== undefined && gameId) socket.emit(\"join\", {\n      game_id: gameId,\n      player: mode === \"CREATE\" ? \"X\" : \"O\"\n    });\n    socket.on(\"connected\", connected);\n    socket.on(\"disconnected\", connected);\n    return () => {\n      socket.emit(\"leave\", {\n        game_id: gameId,\n        player: mode === \"CREATE\" ? \"X\" : \"O\"\n      });\n      socket.off(\"connected\");\n    };\n  }, []);\n  if (!location.state || !gameId) history.replace({\n    pathname: \"/\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center px-4\",\n    style: {\n      height: window.innerHeight\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"underline text-gray-500\",\n      children: \"Go Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"self-end md:text-lg\",\n      children: [\"Joined: \", online]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 h-full justify-center flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        gameId: gameId,\n        mode: mode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      href: window.location.origin + \"/join/\" + gameId,\n      className: \"my-4 text-gray-500 text-sm md:text-base\",\n      rel: \"noreferrer\",\n      children: [\"Game: \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 3\n  }, this);\n};\n\n_s2(Game, \"MsEueqEcAMRO2QvW+5uuskq26Hw=\", false, function () {\n  return [useLocation, useHistory];\n});\n\n_c3 = Game;\nexport default Game;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"sources":["C:/Users/Asus/Documents/GitHub/tictactoe/web/src/pages/Game/index.tsx"],"names":["React","useEffect","useRef","useState","Link","useLocation","useHistory","API_URL","searchGame","socket","toast","Slide","Square","onClick","value","Board","mode","gameId","squares","setSquares","xIsNext","setXIsNext","gameStatus","setGameStatus","enableRestart","setEnableRestart","playingAs","history","squaresRef","current","showToast","text","position","hideProgressBar","draggable","autoClose","pauseOnHover","closeOnClick","transition","gameResult","calculateWinner","winner","gameTied","getBoard","on","updateBoard","off","data","updatedSquares","player","next","res","fetch","json","result","board","status","replace","pathname","handleClick","i","tempSquares","slice","emit","game_id","renderSquare","restartGame","boardData","lines","length","a","b","c","includes","Game","online","setOnline","location","connected","state","checkIfGameExists","gameExists","toString","undefined","height","window","innerHeight","origin"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Link, useLocation, useHistory } from \"react-router-dom\";\nimport { API_URL } from \"../../utils/constants\";\nimport { searchGame } from \"../../utils/searchGame\";\nimport socket from \"../../utils/socket\";\nimport \"./game.css\";\nimport { toast, Slide } from \"react-toastify\";\n\ntype SquareProps = {\n\tonClick: React.MouseEventHandler<HTMLButtonElement> | undefined;\n\tvalue: string | null;\n};\n\nconst Square: React.FC<SquareProps> = ({ onClick, value }) => (\n\t<button className=\"square\" onClick={onClick}>\n\t\t{value}\n\t</button>\n);\n\ntype BoardProps = {\n\tmode: \"CREATE\" | \"JOIN\";\n\tgameId: number;\n};\n\ntype FetchGameResponse = {\n\tresult: \"fail\" | \"success\";\n\tboard: Array<string | null>;\n\tnext: \"X\" | \"O\";\n};\n\ntype UpdateBoardResponse = {\n\tposition: number;\n\tnext: \"X\" | \"O\";\n\tplayer: any;\n};\nconst Board: React.FC<BoardProps> = ({ mode, gameId }) => {\n\tconst [squares, setSquares] = useState<Array<string | null>>([]);\n\tconst [xIsNext, setXIsNext] = useState(true);\n\tconst [gameStatus, setGameStatus] = useState<string | null>(null);\n\tconst [enableRestart, setEnableRestart] = useState(false);\n\n\tconst playingAs = mode === \"CREATE\" ? \"X\" : \"O\";\n\n\tconst history = useHistory();\n\n\tconst squaresRef = useRef(squares);\n\n\tuseEffect(() => {\n\t\tsquaresRef.current = squares;\n\t});\n\n\tconst showToast = (text: string) =>\n\t\ttoast(text, {\n\t\t\tposition: \"bottom-center\",\n\t\t\thideProgressBar: true,\n\t\t\tdraggable: false,\n\t\t\tautoClose: 5000,\n\t\t\tpauseOnHover: false,\n\t\t\tcloseOnClick: true,\n\t\t\ttransition: Slide,\n\t\t});\n\tuseEffect(() => {\n\t\tconst gameResult = calculateWinner(squares);\n\t\tif (gameResult) {\n\t\t\tif (gameResult.winner && !gameResult.gameTied) {\n\t\t\t\tsetGameStatus(`Winner : ${gameResult.winner}`);\n\t\t\t}\n\t\t\tif (gameResult.gameTied && !gameResult.winner) {\n\t\t\t\tsetGameStatus(\"Game Tied\");\n\t\t\t}\n\t\t} else {\n\t\t\tsetGameStatus(\n\t\t\t\t`Next Player : ${\n\t\t\t\t\txIsNext\n\t\t\t\t\t\t? mode === \"CREATE\"\n\t\t\t\t\t\t\t? \"You\"\n\t\t\t\t\t\t\t: \"X\"\n\t\t\t\t\t\t: mode === \"JOIN\"\n\t\t\t\t\t\t? \"You\"\n\t\t\t\t\t\t: \"O\"\n\t\t\t\t}`\n\t\t\t);\n\t\t}\n\t}, [squares]);\n\n\tuseEffect(() => {\n\t\tgetBoard();\n\t\tsocket.on(\"moved\", updateBoard);\n\t\tsocket.on(\"restarted\", () => {\n\t\t\tgetBoard();\n\t\t\tshowToast(\"Game Restarted !\");\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.off(\"moved\", updateBoard);\n\t\t};\n\t}, []);\n\n\tconst updateBoard = (data: UpdateBoardResponse) => {\n\t\tconst updatedSquares = [...squaresRef.current];\n\t\tupdatedSquares[data.position] = data.player;\n\t\tsetSquares(updatedSquares);\n\t\tsetXIsNext(data.next === \"X\");\n\t\tconst gameResult = calculateWinner(updatedSquares);\n\t\tif (gameResult) setEnableRestart(true);\n\t\tif (gameResult?.gameTied) {\n\t\t\tshowToast(\"Game Tied\");\n\t\t}\n\n\t\tif (gameResult?.winner) {\n\t\t\tif (gameResult.winner === playingAs) {\n\t\t\t\tshowToast(\"You won 🎉️\");\n\t\t\t} else {\n\t\t\t\tshowToast(\"You lost\");\n\t\t\t}\n\t\t}\n\t};\n\n\tconst getBoard = async () => {\n\t\tsetEnableRestart(false);\n\t\tconst res = await fetch(`${API_URL}api/fetch/game/${gameId}`);\n\t\tconst data: FetchGameResponse = await res.json();\n\t\tif (data.result === \"success\") {\n\t\t\tsetSquares(data.board);\n\t\t\tsetXIsNext(data.next === \"X\");\n\t\t\tconst status = calculateWinner(data.board);\n\t\t\tif (status) setEnableRestart(true);\n\t\t} else if (data.result === \"fail\") {\n\t\t\thistory.replace({ pathname: \"/\" });\n\t\t}\n\t};\n\n\tconst handleClick = (i: number) => {\n\t\tconst tempSquares = squares.slice();\n\t\tconst gameResult = calculateWinner(squares);\n\n\t\tif (gameResult || squares[i]) {\n\t\t\tif (gameResult?.gameTied) {\n\t\t\t\tshowToast(\"Game Tied\");\n\t\t\t} else if (gameResult?.winner) {\n\t\t\t\tif (gameResult.winner === playingAs) {\n\t\t\t\t\tshowToast(\"You won 🎉️\");\n\t\t\t\t} else {\n\t\t\t\t\tshowToast(\"You lost\");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (mode === \"CREATE\" && xIsNext) {\n\t\t\ttempSquares[i] = \"X\";\n\t\t\tsetSquares(tempSquares);\n\t\t\tsetXIsNext(false);\n\t\t\tsocket.emit(\"move\", {\n\t\t\t\tplayer: tempSquares[i],\n\t\t\t\tposition: i,\n\t\t\t\tgame_id: gameId,\n\t\t\t});\n\t\t} else if (mode === \"JOIN\" && !xIsNext) {\n\t\t\ttempSquares[i] = \"O\";\n\t\t\tsetSquares(tempSquares);\n\t\t\tsetXIsNext(true);\n\t\t\tsocket.emit(\"move\", {\n\t\t\t\tplayer: tempSquares[i],\n\t\t\t\tposition: i,\n\t\t\t\tgame_id: gameId,\n\t\t\t});\n\t\t}\n\t};\n\n\tconst renderSquare = (i: number) => (\n\t\t<Square value={squares[i]} onClick={() => handleClick(i)} />\n\t);\n\n\tconst restartGame = () => socket.emit(\"restartGame\", { game_id: gameId });\n\n\treturn (\n\t\t<div className=\"flex flex-col space-y-4 items-center\">\n\t\t\t<p className=\"text-gray-500 text-sm md:text-base\">{gameStatus}</p>\n\n\t\t\t<div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{renderSquare(0)}\n\t\t\t\t\t{renderSquare(1)}\n\t\t\t\t\t{renderSquare(2)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{renderSquare(3)}\n\t\t\t\t\t{renderSquare(4)}\n\t\t\t\t\t{renderSquare(5)}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"board-row\">\n\t\t\t\t\t{renderSquare(6)}\n\t\t\t\t\t{renderSquare(7)}\n\t\t\t\t\t{renderSquare(8)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<p>\n\t\t\t\tPlaying as : <b>{playingAs}</b>\n\t\t\t</p>\n\t\t\t{enableRestart && <button onClick={restartGame}>Restart</button>}\n\t\t</div>\n\t);\n};\n\nfunction calculateWinner(boardData: Array<string | null>) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t];\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i];\n\t\tif (\n\t\t\tboardData[a] &&\n\t\t\tboardData[a] === boardData[b] &&\n\t\t\tboardData[a] === boardData[c]\n\t\t) {\n\t\t\treturn {\n\t\t\t\twinner: boardData[a],\n\t\t\t\tgameTied: false,\n\t\t\t};\n\t\t}\n\t}\n\tif (boardData.includes(null) === false) {\n\t\treturn {\n\t\t\twinner: null,\n\t\t\tgameTied: true,\n\t\t};\n\t}\n\treturn null;\n}\n\ntype LocationStateType = {\n\tgameId: number;\n\tmode: \"CREATE\" | \"JOIN\";\n};\n\ntype SocketConnectedData = {\n\tgame_id: string;\n\tonline: string[];\n};\n\nconst Game: React.FC<any> = () => {\n\tconst [online, setOnline] = useState(0);\n\n\tconst location = useLocation();\n\tconst history = useHistory();\n\n\tconst connected = (data: SocketConnectedData) =>\n\t\tsetOnline(data.online.length);\n\n\tconst gameId = (location.state as LocationStateType)?.gameId;\n\tconst mode = (location.state as LocationStateType)?.mode || \"JOIN\";\n\n\tconst checkIfGameExists = async () => {\n\t\tconst gameExists = await searchGame(gameId.toString());\n\t\tif (!gameExists) {\n\t\t\thistory.replace({\n\t\t\t\tpathname: \"/\",\n\t\t\t});\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tif (location.state !== undefined && gameId) checkIfGameExists();\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (location.state !== undefined && gameId)\n\t\t\tsocket.emit(\"join\", {\n\t\t\t\tgame_id: gameId,\n\t\t\t\tplayer: mode === \"CREATE\" ? \"X\" : \"O\",\n\t\t\t});\n\n\t\tsocket.on(\"connected\", connected);\n\t\tsocket.on(\"disconnected\", connected);\n\t\treturn () => {\n\t\t\tsocket.emit(\"leave\", {\n\t\t\t\tgame_id: gameId,\n\t\t\t\tplayer: mode === \"CREATE\" ? \"X\" : \"O\",\n\t\t\t});\n\t\t\tsocket.off(\"connected\");\n\t\t};\n\t}, []);\n\n\tif (!location.state || !gameId)\n\t\thistory.replace({\n\t\t\tpathname: \"/\",\n\t\t});\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"flex flex-col items-center px-4\"\n\t\t\tstyle={{\n\t\t\t\theight: window.innerHeight,\n\t\t\t}}\n\t\t>\n\t\t\t<Link to=\"/\" className=\"underline text-gray-500\">\n\t\t\t\tGo Home\n\t\t\t</Link>\n\n\t\t\t<p className=\"self-end md:text-lg\">Joined: {online}</p>\n\n\t\t\t<div className=\"flex-grow-1 h-full justify-center flex flex-col\">\n\t\t\t\t<Board gameId={gameId} mode={mode} />\n\t\t\t</div>\n\n\t\t\t<a\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\thref={window.location.origin + \"/join/\" + gameId}\n\t\t\t\tclassName=\"my-4 text-gray-500 text-sm md:text-base\"\n\t\t\t\trel=\"noreferrer\"\n\t\t\t>\n\t\t\t\tGame: {gameId}\n\t\t\t</a>\n\t\t</div>\n\t);\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}