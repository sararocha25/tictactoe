{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Documents\\\\GitHub\\\\tic-tac-toe-online-main\\\\web\\\\src\\\\pages\\\\Join\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { API_URL } from \"../../utils/constants\";\nimport { errorToast } from \"../../utils/errorToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Join = () => {\n  _s();\n\n  const params = useParams();\n  const history = useHistory();\n\n  const searchGame = async () => {\n    const res = await fetch(`${API_URL}api/search/game`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        game_id: params.gameId\n      })\n    });\n    const data = await res.json();\n\n    if (data.result === \"fail\") {\n      errorToast(\"Game does'nt exist\");\n      history.replace({\n        pathname: \"/\"\n      });\n    }\n\n    if (data.result === \"success\") history.replace({\n      pathname: \"/game\",\n      state: {\n        gameId: params.gameId,\n        mode: \"JOIN\"\n      }\n    });\n  };\n\n  useEffect(() => {\n    searchGame();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center justify-center h-screen \",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-2xl md:text-4xl my-2\",\n      children: \"Joining Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"my-8\",\n      children: [\"Game ID: \", params.gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Join, \"l0C8nt3q8kY80OQA2Ts09wPR1QQ=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Join;\nexport default Join;\n\nvar _c;\n\n$RefreshReg$(_c, \"Join\");","map":{"version":3,"sources":["C:/Users/Asus/Documents/GitHub/tic-tac-toe-online-main/web/src/pages/Join/index.tsx"],"names":["React","useEffect","useHistory","useParams","API_URL","errorToast","Join","params","history","searchGame","res","fetch","method","headers","body","JSON","stringify","game_id","gameId","data","json","result","replace","pathname","state","mode"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,SAASC,UAAT,QAA2B,wBAA3B;;;AAKA,MAAMC,IAAmB,GAAG,MAAM;AAAA;;AACjC,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAMK,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,UAAU,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEP,OAAQ,iBAAZ,EAA8B;AACpDQ,MAAAA,MAAM,EAAE,MAD4C;AAEpDC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF2C;AAGpDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,OAAO,EAAEV,MAAM,CAACW;AAAlB,OAAf;AAH8C,KAA9B,CAAvB;AAMA,UAAMC,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAJ,EAAnB;;AACA,QAAID,IAAI,CAACE,MAAL,KAAgB,MAApB,EAA4B;AAC3BhB,MAAAA,UAAU,CAAC,oBAAD,CAAV;AACAG,MAAAA,OAAO,CAACc,OAAR,CAAgB;AACfC,QAAAA,QAAQ,EAAE;AADK,OAAhB;AAGA;;AAED,QAAIJ,IAAI,CAACE,MAAL,KAAgB,SAApB,EACCb,OAAO,CAACc,OAAR,CAAgB;AACfC,MAAAA,QAAQ,EAAE,OADK;AAEfC,MAAAA,KAAK,EAAE;AACNN,QAAAA,MAAM,EAAEX,MAAM,CAACW,MADT;AAENO,QAAAA,IAAI,EAAE;AAFA;AAFQ,KAAhB;AAQD,GAxBD;;AAyBAxB,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,UAAU;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,qDAAf;AAAA,4BACC;AAAG,MAAA,SAAS,EAAC,2BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA,8BAA8BF,MAAM,CAACW,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAvCD;;GAAMZ,I;UACUH,S,EACCD,U;;;KAFXI,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { API_URL } from \"../../utils/constants\";\n\nimport { errorToast } from \"../../utils/errorToast\";\ntype Params = {\n\tgameId: string;\n};\n\nconst Join: React.FC<any> = () => {\n\tconst params = useParams<Params>();\n\tconst history = useHistory();\n\n\tconst searchGame = async () => {\n\t\tconst res = await fetch(`${API_URL}api/search/game`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify({ game_id: params.gameId }),\n\t\t});\n\n\t\tconst data = await res.json();\n\t\tif (data.result === \"fail\") {\n\t\t\terrorToast(\"Game does'nt exist\");\n\t\t\thistory.replace({\n\t\t\t\tpathname: \"/\",\n\t\t\t});\n\t\t}\n\n\t\tif (data.result === \"success\") \n\t\t\thistory.replace({\n\t\t\t\tpathname: \"/game\",\n\t\t\t\tstate: {\n\t\t\t\t\tgameId: params.gameId,\n\t\t\t\t\tmode: \"JOIN\",\n\t\t\t\t},\n\t\t\t});\n\t\t\n\t};\n\tuseEffect(() => {\n\t\tsearchGame();\n\t}, []);\n\n\treturn (\n\t\t<div className=\"flex flex-col items-center justify-center h-screen \">\n\t\t\t<p className=\"text-2xl md:text-4xl my-2\">Joining Game</p>\n\t\t\t<p className=\"my-8\">Game ID: {params.gameId}</p>\n\t\t</div>\n\t);\n};\n\nexport default Join;\n"]},"metadata":{},"sourceType":"module"}